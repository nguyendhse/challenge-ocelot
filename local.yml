version: '3'

volumes:
  challenge_ocelot_local_postgres_data: {}
  challenge_ocelot_local_postgres_data_backups: {}

services:
  django:
    build:
      context: .
      dockerfile: compose/local/django/Dockerfile
    image: challenge_ocelot_local_django
    container_name: challenge_ocelot_local_django
    depends_on:
      - postgres
    volumes:
      - .:/app:z
    env_file:
      - .envs/.local/.django
      - .envs/.local/.postgres
    ports:
      - '8000:8000'
    command: /start

  postgres:
    build:
      context: .
      dockerfile: compose/production/postgres/Dockerfile
    image: challenge_ocelot_production_postgres
    container_name: challenge_ocelot_local_postgres
    volumes:
      - challenge_ocelot_local_postgres_data:/var/lib/postgresql/data
      - challenge_ocelot_local_postgres_data_backups:/backups
    ports:
      - "5432:5432"
    env_file:
      - .envs/.local/.postgres
  pgbouncer:
    image: edoburu/pgbouncer:latest
    env_file:
      - .envs/.local/.postgres
    environment:
      DATABASE_URL: "${POSTGRES_DATABASE_URL}-postgresql://debug:debug@postgres:5432/challenge_ocelot"
    depends_on:
      - postgres
  docs:
    image: challenge_ocelot_local_docs
    container_name: challenge_ocelot_local_docs
    build:
      context: .
      dockerfile: compose/local/docs/Dockerfile
    env_file:
      - .envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./challenge_ocelot:/app/challenge_ocelot:z
    ports:
      - '9000:9000'
    command: /start-docs
